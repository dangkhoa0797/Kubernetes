---
- hosts: master worker
  become: true
  tasks:
  - name: update datetime
    shell: |
      sudo apt update
      DEBIAN_FRONTEND='noninteractive' apt-get -y -o Dpkg::Options::='--force-confdef' -o Dpkg::Options::='--force-confold' upgrade
      DEBIAN_FRONTEND='noninteractive' apt-get -y -o Dpkg::Options::='--force-confdef' -o Dpkg::Options::='--force-confold' dist-upgrade
      timedatectl set-timezone Asia/Ho_Chi_Minh
      hwclock --hctosys
      hwclock --systohc
      timedatectl set-ntp on

# Config limit parameters
  - name: Config limit parameters soft
    shell: echo "*    soft    nofile 819200" >>/etc/security/limits.conf
    
  - name: Config limit parameters hard
    shell: echo "*    hard    nofile 819200" >>/etc/security/limits.conf
    
  - name: Config limit parameters touch
    shell: touch /etc/security/limits.conf
    
  - name: Config limit parameters file-max
    shell: echo "fs.file-max = 200000" >>/etc/sysctl.conf
   
  - name: Config limit parameters inotify.max_user_watches
    shell: echo "fs.inotify.max_user_watches = 2048576" >>/etc/sysctl.conf
   
  - name: Config limit parameters inotify.max_user_instances
    shell: echo "fs.inotify.max_user_instances = 524288" >>/etc/sysctl.conf


  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - gnupg2
      - nfs-common
      - httpie
      - net-tools

  - name: disable ufw
    shell: systemctl disable --now ufw

  - name: config containerd
    shell: |
      cat > /etc/modules-load.d/containerd.conf <<EOF
      overlay
      br_netfilter
      EOF
    tags: cat1
  - name: app config containerd
    shell: |
      modprobe overlay
      modprobe br_netfilter
    tags: s2

  - name: config kubernetes
    shell: |
      cat >/etc/sysctl.d/kubernetes.conf<<EOF
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      EOF
    tags: cat2

  - name: app config kubernetes
    shell: sudo sysctl --system

  - name: Add an apt signing key for Docker
    shell: |
      rm -f /etc/apt/trusted.gpg.d/docker.gpg
      sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg

  - name: Adding apt repository for Docker
    shell: sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" -y
  - name: Install containerd and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - containerd.io
  - name: config containerd 2
    shell: |
      mkdir -p /etc/containerd
      containerd config default > /etc/containerd/config.toml
      sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
    tags: s3

  - name: restart containerd
    shell: |
      systemctl restart containerd
      systemctl enable containerd
    tags: s3

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes 
    shell: sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
      
  - name:  Adding apt repository for Kubernetes
    shell: echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

  - name: Install the version of package "kubelet" and allow potential downgrades
    ansible.builtin.apt:
      name: kubelet=1.25.1-00
      state: present
      allow_downgrade: yes
      update_cache: yes
    tags: kube

  - name: Install the version of package "kubeadm" and allow potential downgrades
    ansible.builtin.apt:
      name: kubeadm=1.25.1-00
      state: present
      update_cache: yes
      allow_downgrade: yes
    tags: kube
  - name: Install the version of package "kubectl" and allow potential downgrades
    ansible.builtin.apt:
      name: kubectl=1.25.1-00
      state: present
      update_cache: yes
      allow_downgrade: yes
    tags: kube

  - name: pin their version
    shell: sudo apt-mark hold kubelet kubeadm kubectl

  - name: enable kubelet
    shell: sudo systemctl enable kubelet       